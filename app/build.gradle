import tasks.YamlToAndroidStringsTask

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def versionPropsFile = rootProject.file("version.properties")
def versionProps = new Properties()
versionProps.load(new FileInputStream(versionPropsFile))

def loadEnv() {
    def envFile = rootProject.file(".env")
    if (! envFile.exists()) return
    envFile.eachLine { line ->
        if (line.trim().isEmpty() || line.startsWith("#")) return
        def (name, value) = line.split("=", 2)
        if (name && value) {
            project.ext.set(name.trim(), value.trim())
        }
    }
}

loadEnv()


android {
    signingConfigs {
       release {
           storeFile file(RELEASE_STORE_FILE)
           storePassword RELEASE_STORE_PASSWORD
           keyAlias RELEASE_KEY_ALIAS
           keyPassword RELEASE_KEY_PASSWORD
       }
    }

    namespace = 'net.canvoki.carburoid'
    compileSdk = 36

    defaultConfig {
        applicationId "net.canvoki.carburoid"
        minSdk = 26
        targetSdk = 36
        versionCode = Integer.parseInt(versionProps['versionCode'])
        versionName = versionProps['versionName']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // Override the default 'app' (module name) by the applicationId
    applicationVariants.all { variant ->
        outputs.all { output ->
            def version = variant.mergedFlavor.versionName
            def buildType = variant.buildType.name
            def appId = variant.applicationId
            def flavorInfix = android.productFlavors.size() > 1 ? "-${variant.flavorName}" : ""
            output.outputFileName = "${appId}${flavorInfix}-${version}-${buildType}.apk"

        }
    }
    bundle {
        language {
            // Because user may change the language, all should be present
            enableSplit = false
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
        }
    }

    flavorDimensions "freeness"

    productFlavors {
        floss {
            dimension "freeness"
            isDefault = true
        }
        nonfree { dimension "freeness" }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding = true
    }
    testOptions {
        unitTests.all {
            jvmArgs(
                "-XX:+EnableDynamicAgentLoading",
                "--add-opens", "java.base/java.time=ALL-UNNAMED",
                "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED"
            )
        }
    }
    // Dependencies info is encrypted Google only to read block
    dependenciesInfo {
        includeInApk = false // APK
        includeInBundle = false // AAB
    }
}

tasks.withType(Test) {
    testLogging {
        events "failed", "skipped"//, "standardOut", "standardError", "passed", "started" 
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
        showStandardStreams = true
        showExceptions = true
        showCauses = true
        showStackTraces = true
    }
}

task yamlToAndroidStrings(type: YamlToAndroidStringsTask)
preBuild.dependsOn yamlToAndroidStrings

dependencies {
    implementation 'androidx.core:core-ktx:1.17.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.13.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.4'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.squareup.retrofit2:retrofit:3.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:3.0.0'
    implementation 'com.squareup.retrofit2:converter-scalars:3.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:latest'
    implementation 'org.osmdroid:osmdroid-android:6.1.20'
    implementation 'org.osmdroid:osmdroid-wms:6.1.20'

    nonfreeImplementation 'com.google.android.gms:play-services-location:21.3.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.code.gson:gson:2.13.2'
    testImplementation "io.mockk:mockk:1.14.6"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:latest"
    testImplementation "org.jetbrains.kotlin:kotlin-test:latest"
    testImplementation "org.robolectric:robolectric:4.16"

    androidTestImplementation "androidx.test:core:1.7.0"
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:latest"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:1.9.24"
}

